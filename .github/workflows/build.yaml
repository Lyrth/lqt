name: Build

on: workflow_dispatch

jobs:
  publish:
    runs-on: windows-2019
    permissions:
      # Token permission for release uploading
      contents: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Cache Qt
        id: cache-qt
        uses: actions/cache@v2
        with:
          path: '${{ github.workspace }}/qt/'
          key: ${{ runner.os }}-QtCache

      - name: Install Qt
        uses: jurplel/install-qt-action@v2
        with:
          version: '5.15.2'
          host: 'windows'
          target: 'desktop'
          arch: 'win64_msvc2019_64'
          install-deps: 'true'
          modules: 'qtscript qtwebengine'
          dir: '${{ github.workspace }}/qt/'
          cached: ${{ steps.cache-qt.outputs.cache-hit }}

      - name: Run MSVC VsDevCmd
        uses: ilammy/msvc-dev-cmd@v1

      - name: Build LuaJIT
        working-directory: ./modules/src/LuaJIT/src
        shell: cmd
        run: call msvcbuild.bat

      - name: Make build directory
        shell: cmd
        run: mkdir build

      - name: (Draft) Cache build
        id: cache-build
        uses: actions/cache@v2
        with:
          path: '${{ github.workspace }}/build/'
          key: ${{ runner.os }}-BuildCache

      - name: Run cmake and build
        if: steps.cache-build.outputs.cache-hit != 'true'
        shell: cmd
        run: |
          cmake -G "Visual Studio 16 2019" -A x64 -H. -Bbuild -Wno-dev
          cmake --build build --target ALL_BUILD --config Release -j4

      - name: Get current short commit hash
        id: vars
        shell: bash
        run: |
          echo "::set-output name=date::$(date +'%Y-%m-%d.%H:%M')"
          echo "::set-output name=commit_hash::$(git rev-parse HEAD)"
          echo "::set-output name=commit_hash_short::$(git rev-parse --short HEAD)"

      - name: Archive output into zip
        uses: thedoctor0/zip-release@0.6.2
        with:
          type: 'zip'
          path: 'build/lib/Release'
          filename: 'lqt-${{ steps.vars.outputs.commit_hash_short }}-${{ runner.os }}-${{ runner.arch }}.zip'
          exclusions: '*.exp *.lib'

      - name: Upload Release
        uses: ncipollo/release-action@v1
        with:
          artifacts: 'lqt-${{ steps.vars.outputs.commit_hash_short }}-${{ runner.os }}-${{ runner.arch }}.zip'
          tag: Draft.${{ steps.vars.outputs.date }}
          commit: ${{ steps.vars.outputs.commit_hash }}
          draft: 'true'
          body: Draft release for Windows x64

      - name: Done.
        run: echo "Done."
